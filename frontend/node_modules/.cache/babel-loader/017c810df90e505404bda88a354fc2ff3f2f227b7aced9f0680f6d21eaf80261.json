{"ast":null,"code":"var _jsxFileName = \"/Users/sushilsubedi/Downloads/spring-boot-websocket-chat-demo-master/frontend/src/app/component/pointer/PointerVote.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Button, Container, Form, Table } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport config from \"../../Config\";\nimport SockJS from 'sockjs-client';\n//import Stomp from 'stompjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst wsClient = new W3CWebSocket(config.WS_URL);\nconst PointerVote = () => {\n  _s();\n  const [series, setSeries] = React.useState([]);\n  const [message, setMessage] = React.useState('');\n  const [messages, setMessages] = React.useState([]);\n  const [webSocket, setWebSocket] = React.useState(null);\n  const params = useParams();\n  const connect = () => {\n    const webSocket = new WebSocket(config.WS_URL);\n    webSocket.onopen = () => {\n      console.log('WebSocket connected');\n    };\n    webSocket.onmessage = event => {\n      const message = JSON.parse(event.data);\n      setMessages(messages => [...messages, message]);\n    };\n    setWebSocket(webSocket);\n  };\n  useEffect(() => {\n    connect();\n  }, []);\n  const handleSend = () => {\n    const messageObj = {\n      sender: 'Me',\n      content: message\n    };\n    const messageString = JSON.stringify(messageObj);\n    webSocket.send(messageString);\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [message.sender, \": \", message.content]\n    }, message.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: event => setMessage(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n  useEffect(() => {\n    const fibonacciResult = number => {\n      let n1 = 0,\n        n2 = 1,\n        nextTerm;\n      let seq = [n1, n2];\n      nextTerm = n1 + n2;\n      while (nextTerm <= number) {\n        // print the next term\n        seq.push(nextTerm);\n        n1 = n2;\n        n2 = nextTerm;\n        nextTerm = n1 + n2;\n      }\n      return seq;\n    };\n    setSeries(fibonacciResult(100));\n  }, []);\n\n  // return (\n  //     <Container>\n  //         <div>\n  //             <Form.Label htmlFor=\"inputPassword5\">Story Description</Form.Label>\n  //             <Form.Control\n  //                 type=\"textarea\"\n  //                 id=\"inputPassword5\"\n  //                 aria-describedby=\"passwordHelpBlock\"\n  //             />\n  //             <Form.Text id=\"passwordHelpBlock\" muted>\n  //                 Enter Your Story\n  //             </Form.Text>\n  //         </div>\n  //         <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n  //             <Button variant=\"danger\">Clear Vote</Button>\n  //             <Button variant=\"primary\">Show Vote</Button>\n  //         </div>\n  //         {/*point part*/}\n  //         <div>\n  //             {\n  //                 series.map((item, key) => {\n  //                     return (\n  //                         <Button variant=\"secondary\" key={key}>{item}</Button>\n  //                     )\n  //                 })\n  //             }\n  //         </div>\n  //         <hr/>\n  //         <div>\n  //             <p>Score</p>\n  //             <div>\n  //                 <Table striped bordered hover>\n  //                     <thead>\n  //                     <tr>\n  //                         <th>#</th>\n  //                         <th>Name</th>\n  //                         <th>Score</th>\n  //                     </tr>\n  //                     </thead>\n  //                     <tbody>\n  //                     <tr>\n  //                         <td>1</td>\n  //                         <td>Otto</td>\n  //                         <td>1</td>\n  //                     </tr>\n  //                     <tr>\n  //                         <td>2</td>\n  //                         <td>Thornton</td>\n  //                         <td>3</td>\n  //                     </tr>\n  //                     <tr>\n  //                         <td>3</td>\n  //                         <td>Larry the Bird</td>\n  //                         <td>2</td>\n  //                     </tr>\n  //                     </tbody>\n  //                 </Table>\n  //             </div>\n  //         </div>\n  //\n  //     </Container>\n  // )\n};\n_s(PointerVote, \"dnD/lMajDME8T3jVLeUgyjCje8A=\", false, function () {\n  return [useParams];\n});\n_c = PointerVote;\nexport default PointerVote;\nvar _c;\n$RefreshReg$(_c, \"PointerVote\");","map":{"version":3,"names":["React","useEffect","Button","Container","Form","Table","useParams","w3cwebsocket","W3CWebSocket","config","SockJS","wsClient","WS_URL","PointerVote","series","setSeries","useState","message","setMessage","messages","setMessages","webSocket","setWebSocket","params","connect","WebSocket","onopen","console","log","onmessage","event","JSON","parse","data","handleSend","messageObj","sender","content","messageString","stringify","send","map","id","target","value","fibonacciResult","number","n1","n2","nextTerm","seq","push"],"sources":["/Users/sushilsubedi/Downloads/spring-boot-websocket-chat-demo-master/frontend/src/app/component/pointer/PointerVote.jsx"],"sourcesContent":["import React, {useEffect} from \"react\";\nimport {Button, Container, Form, Table} from \"react-bootstrap\";\nimport {useParams} from \"react-router-dom\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport config from \"../../Config\";\nimport SockJS from 'sockjs-client';\n//import Stomp from 'stompjs';\n\nconst wsClient = new W3CWebSocket(config.WS_URL);\n\n\nconst PointerVote = () => {\n    const [series, setSeries] = React.useState([]);\n    const [message, setMessage] = React.useState('');\n    const [messages, setMessages] = React.useState([]);\n    const [webSocket, setWebSocket] = React.useState(null);\n    const params = useParams();\n\n\n    const connect = () => {\n        const webSocket = new WebSocket(config.WS_URL);\n        webSocket.onopen = () => {\n            console.log('WebSocket connected');\n        };\n        webSocket.onmessage = (event) => {\n            const message = JSON.parse(event.data);\n            setMessages((messages) => [...messages, message]);\n        };\n        setWebSocket(webSocket);\n    };\n\n    useEffect(() => {\n        connect();\n    }, []);\n\n    const handleSend = () => {\n        const messageObj = { sender: 'Me', content: message };\n        const messageString = JSON.stringify(messageObj);\n        webSocket.send(messageString);\n        setMessage('');\n    };\n\n    return (\n        <div>\n            {messages.map((message) => (\n                <div key={message.id}>\n                    {message.sender}: {message.content}\n                </div>\n            ))}\n            <input\n                type=\"text\"\n                value={message}\n                onChange={(event) => setMessage(event.target.value)}\n            />\n            <button onClick={handleSend}>Send</button>\n        </div>\n    );\n\n    useEffect(() => {\n        const fibonacciResult = number => {\n            let n1 = 0, n2 = 1, nextTerm;\n            let seq = [n1,n2];\n            nextTerm = n1 + n2;\n            while (nextTerm <= number) {\n                // print the next term\n                seq.push(nextTerm)\n                n1 = n2;\n                n2 = nextTerm;\n                nextTerm = n1 + n2;\n            }\n            return seq;\n        };\n        setSeries(fibonacciResult(100));\n    }, [])\n\n\n    // return (\n    //     <Container>\n    //         <div>\n    //             <Form.Label htmlFor=\"inputPassword5\">Story Description</Form.Label>\n    //             <Form.Control\n    //                 type=\"textarea\"\n    //                 id=\"inputPassword5\"\n    //                 aria-describedby=\"passwordHelpBlock\"\n    //             />\n    //             <Form.Text id=\"passwordHelpBlock\" muted>\n    //                 Enter Your Story\n    //             </Form.Text>\n    //         </div>\n    //         <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n    //             <Button variant=\"danger\">Clear Vote</Button>\n    //             <Button variant=\"primary\">Show Vote</Button>\n    //         </div>\n    //         {/*point part*/}\n    //         <div>\n    //             {\n    //                 series.map((item, key) => {\n    //                     return (\n    //                         <Button variant=\"secondary\" key={key}>{item}</Button>\n    //                     )\n    //                 })\n    //             }\n    //         </div>\n    //         <hr/>\n    //         <div>\n    //             <p>Score</p>\n    //             <div>\n    //                 <Table striped bordered hover>\n    //                     <thead>\n    //                     <tr>\n    //                         <th>#</th>\n    //                         <th>Name</th>\n    //                         <th>Score</th>\n    //                     </tr>\n    //                     </thead>\n    //                     <tbody>\n    //                     <tr>\n    //                         <td>1</td>\n    //                         <td>Otto</td>\n    //                         <td>1</td>\n    //                     </tr>\n    //                     <tr>\n    //                         <td>2</td>\n    //                         <td>Thornton</td>\n    //                         <td>3</td>\n    //                     </tr>\n    //                     <tr>\n    //                         <td>3</td>\n    //                         <td>Larry the Bird</td>\n    //                         <td>2</td>\n    //                     </tr>\n    //                     </tbody>\n    //                 </Table>\n    //             </div>\n    //         </div>\n    //\n    //     </Container>\n    // )\n}\n\n\nexport default PointerVote;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}